{"remainingRequest":"/home/kamil/go/src/e-clinic/src/front2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kamil/go/src/e-clinic/src/front2/src/views/Appointment.vue?vue&type=style&index=0&id=a0e6e856&scoped=true&lang=css&","dependencies":[{"path":"/home/kamil/go/src/e-clinic/src/front2/src/views/Appointment.vue","mtime":1610291027604},{"path":"/home/kamil/go/src/e-clinic/src/front2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kamil/go/src/e-clinic/src/front2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/kamil/go/src/e-clinic/src/front2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/kamil/go/src/e-clinic/src/front2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kamil/go/src/e-clinic/src/front2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmxhYmVsIHsKICBmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMyYzNlNTA7Cn0K"},{"version":3,"sources":["Appointment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Appointment.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h2>Appointment</h2>\n    <table v-if=\"appointment\" class=\"tg\" id=\"customers\">\n      <thead>\n        <tr>\n          <th class=\"tg-0lax\">Status</th>\n          <th class=\"tg-0lax\">Time</th>\n          <th class=\"tg-0lax\">Duration(min)</th>\n        </tr>\n      </thead>\n      <tbody>\n        <td class=\"tg-0lax\">\n          <b>{{ appointment.appointment.state }}</b>\n        </td>\n        <td class=\"tg-0lax\">{{ appointment.appointment.scheduled_time }}</td>\n        <td class=\"tg-0lax\">{{ appointment.appointment.duration / 30 }}</td>\n      </tbody>\n    </table>\n    <br />\n    <h2>Form</h2>\n    <table v-if=\"appointment\" class=\"tg\" id=\"customers\">\n      <thead>\n        <tr>\n          <th class=\"tg-0lax\">Form comment</th>\n        </tr>\n      </thead>\n      <tbody>\n        <td class=\"tg-0lax\">\n          {{ appointment.form.comment }}\n        </td>\n      </tbody>\n    </table>\n    <br />\n    <h2>Prescription</h2>\n    <table v-if=\"appointment\" class=\"tg\" id=\"customers\">\n      <thead>\n        <tr>\n          <th class=\"tg-0lax\">Comment</th>\n        </tr>\n      </thead>\n      <tbody>\n        <td class=\"tg-0lax\">{{ appointment.prescription.comment }}</td>\n      </tbody>\n    </table>\n\n    <table v-if=\"appointment\" class=\"tg\" id=\"customers\">\n      <thead>\n        <tr>\n          <th class=\"tg-0lax\">Drug</th>\n          <th class=\"tg-0lax\">Dosing</th>\n        </tr>\n      </thead>\n      <tbody>\n        <router-link\n          v-bind:key=\"drug.id\"\n          v-for=\"drug in appointment.prescription.drugs\"\n          tag=\"tr\"\n          :to=\"{ name: 'drug', params: { id: drug.drug } }\"\n        >\n          <td class=\"tg-0lax\">\n            <b>{{ drug.drug }}</b>\n          </td>\n          <td class=\"tg-0lax\">{{ drug.dosing }}</td>\n        </router-link>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Appointment\",\n  data() {\n    return {\n      appointment: null,\n    };\n  },\n  methods: {\n    getAppointment(uid) {\n      axios\n        .get(`http://localhost:8081/api/v1/Assistant/GetAppointment?aID=${uid}`)\n        .then((response) => {\n          console.log(response.data);\n          this.appointment = response.data;\n        });\n    },\n  },\n  created() {\n    this.getAppointment(this.$route.params.id);\n  },\n  beforeRouteUpdate(to, from, next) {\n    console.log(to, from, next);\n    this.getContent(to.params.id);\n    next();\n  },\n};\n// #007bff\n</script>\n\n<style scoped>\nlabel {\n  font-family: Avenir, Helvetica, Arial, sans-serif !important;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>"]}]}