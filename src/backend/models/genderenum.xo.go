// Package models contains the types for schema 'public'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Genderenum is the 'genderenum' enum type from schema 'public'.
type Genderenum string

const (
	// GenderenumXx is the 'XX' Genderenum.
	GenderenumXx = Genderenum("XX")

	// GenderenumFemale is the 'FEMALE' Genderenum.
	GenderenumFemale = Genderenum("FEMALE")

	// GenderenumMale is the 'MALE' Genderenum.
	GenderenumMale = Genderenum("MALE")
)

var GenderenumValues = []Genderenum{GenderenumXx, GenderenumFemale, GenderenumMale}

// String returns the string value of the Genderenum.
func (g Genderenum) String() string {
	return string(g)
}

// MarshalText marshals Genderenum into text.
func (g Genderenum) MarshalText() ([]byte, error) {
	return []byte(g.String()), nil
}

// UnmarshalText unmarshals Genderenum from text.
func (g *Genderenum) UnmarshalText(text []byte) error {
	switch string(text) {
	case "XX":
		*g = GenderenumXx

	case "FEMALE":
		*g = GenderenumFemale

	case "MALE":
		*g = GenderenumMale

	default:
		return errors.New("invalid Genderenum")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Genderenum.
func (g Genderenum) Value() (driver.Value, error) {
	return g.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Genderenum.
func (g *Genderenum) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Genderenum")
	}

	return g.UnmarshalText(buf)
}
